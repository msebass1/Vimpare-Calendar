{"version":3,"sources":["components/Theme/index.js","components/Bar/index.js","components/Table/index.js","components/Welcome/index.js","styles.js","App.js","serviceWorker.js","index.js"],"names":["Theme","createMuiTheme","palette","type","useStyles","makeStyles","root","flexGrow","appBar","top","bottom","menuButton","marginRight","title","Bar","setRecordatorios","setErr","classes","className","AppBar","position","Toolbar","Typography","edge","variant","Button","color","onClick","e","rec","er","ApiCalendar","handleAuthClick","sign","listUpcomingEvents","then","result","items","length","Divider","orientation","flexItem","handleSignoutClick","href","IconButton","aria-label","theme","ListA","backgroundColor","background","paper","ListB","topDateA","padding","topDateB","hours","n","diario","h","i","push","Box","key","ListItem","button","ListItemText","primary","String","secondary","Table","recordatorios","rawDate","Date","date","getDate","getMonth","getFullYear","record","res","filter","Number","start","dateTime","slice","ret","summary","rer","console","log","Grid","container","spacing","wrap","ndate","item","xs","marginLeft","join","List","component","dias","Welcome","display","justifyContent","p","bgcolor","mx","mt","borderRadius","direction","justify","alignItems","fontSize","fontFamily","listA","listB","App","useState","err","useEffect","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.410cea54.chunk.js","sourcesContent":["import { \n  createMuiTheme,\n} from '@material-ui/core/styles';\n\nexport  const Theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    /*background: {\n      default: '#264653',\n      paper: '#66BFBF',\n      \n    },\n    primary: {\n      main: '#FF4B5C',\n    },\n    secondary: {\n      main: '#056674',\n    },*/\n  },\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Divider from '@material-ui/core/Divider';\nimport ApiCalendar from 'react-google-calendar-api';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  menuButton: {\n    marginRight: 2,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction singin (rec,er){\n  ApiCalendar.handleAuthClick()\n  if (ApiCalendar.sign){\n      ApiCalendar.listUpcomingEvents(50)\n      .then(({result}) => {\n\tif(result.items.length===0){\n\t  er('no event');\n\t}else{\n\t  rec(result.items);\n\t}\n      })\n    }\n  else{\n    er('auth problem');\n  }\n}\n\nexport default function Bar({ setRecordatorios,setErr }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} position=\"fixed\">\n        <Toolbar>\n\t  <Typography edge=\"start\" variant=\"h6\" className={classes.title}>\n\t    <code>:VimpareCalendar </code>\n          </Typography>\n\t  <Button color=\"secondary\" onClick={e=>singin(setRecordatorios,setErr)}>login</Button>\n\t  <Divider orientation=\"vertical\" flexItem />\n\t  <Button color=\"secondary\" onClick={ApiCalendar.handleSignoutClick}>logout</Button>\n\t  <Divider orientation=\"vertical\" flexItem /> \n\t  <Button color=\"secondary\" >Shortcuts</Button>\n\t  <Divider orientation=\"vertical\" flexItem />\n          <a href='https://github.com/msebass1'>\n          <IconButton edge=\"end\" className={classes.menuButton} color=\"secondary\" aria-label=\"menu\" >\n            <GitHubIcon />\n          </IconButton>\n\t  </a>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Box, Typography } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  ListA: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  ListB:{\n    backgroundColor: '#3f51b5',\n  },\n  topDateA:{\n    padding:'10px',\n    backgroundColor: '#056674',\n    \n  },\n  topDateB:{\n    padding:'10px',\n    backgroundColor: theme.palette.background.paper\n\n  }\n}));\n\n// definir el horario de sueÃ±o antes\nconst hours = (n,diario) =>{\n  var [inicio,fin] = [6,22];\n  var h = [];\n  for(var i = inicio; i<fin ;i++){\n    h.push(\n      <Box key={i}>\n      <ListItem button  >\n\t<ListItemText \n\t  primary={String(i)+':00'} \n\t  secondary={diario[n][i]?diario[n][i]:'-'}/>\n      </ListItem>\n    </Box>\n    )\n  }\n  return h;\n}\n\nfunction dias(date,record){\n  var wrap = [];\n  var ndate = [...date]\n  for(var i=0;i<6;i++){\n    ndate[0]=date[0]+i;\n    wrap.push(\n\t<Grid item xs={2}>\n\t  <Box marginLeft={3} >\n\t    <Typography edge=\"start\" >\n\t      <code>\n\t      {ndate.join('/')}\n\t      </code>\n\t    </Typography>\n\t    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n\t      {hours(i,record)}\n\t    </List>\n\t  </Box>\n\t</Grid>\n    )\n  }\n  return(wrap);\n}\n\nfunction rer(recordatorios,date){\n  let res = recordatorios.filter(rec => Number(rec.start.dateTime.slice(8,10)) <= date+7 );\n  let ret = [{},{},{},{},{},{},{}];\n  for(var i=0; i < res.length;i++){\n    ret[i][Number(res[i].start.dateTime.slice(11,13))] = res[i].summary;\n  } \n  return ret;\n}\n\nfunction Table({recordatorios}) {\n  const classes = useStyles();\n\n  var rawDate = new Date()\n  var date = [rawDate.getDate(),rawDate.getMonth(),rawDate.getFullYear()]\n  var record = rer(recordatorios,date[0]);\n  console.log(date);\n  \n  return (\n    <Grid container spacing={0}>\n\t{ dias(date,record) }\n    </Grid>\n  );\n}\nexport default Table;\n","import React from 'react';\nimport { Typography, Box, Grid, Button, Paper } from '@material-ui/core';\nimport {Theme} from '../Theme';\nimport Typist from 'react-typist';\n\nexport default function Welcome(){\n  return (\n    <div>\n      <Box display=\"flex\" justifyContent=\"center\"  p={1} bgcolor=\"background.paper\" mx={30} mt={15} borderRadius={15}>\n\t<Grid\n        container\n        direction=\"column\"\n\tjustify=\"center\"\n        alignItems=\"center\"\n\tspacing={5}>\n\t<Grid item>\n\t  <Box fontSize=\"h3.fontSize\" fontFamily=\"Monospace\">\n\t  <Typist>\n\t   Welcome to Vimpire Calendar\n\t  </Typist>\n\t  </Box>\n\t</Grid>\n\t<Grid item >\n\t  <Typography><code>To moves use:</code></Typography>\n\t</Grid>\n        </Grid>\n      </Box>\n    </div> \n  )\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n  listA: {\n    marginRight: 2,\n    background: '#E0ECE4',\n  },\n  listB: {\n    marginRight: 2,\n    background: '#A7E1E1',\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n}));\n","import React,{ useState, useEffect } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport {  Box, CssBaseline } from '@material-ui/core';\nimport { Theme }from './components/Theme';\nimport Bar from './components/Bar';\nimport Table  from './components/Table';\nimport Welcome from './components/Welcome'\nimport { useStyles } from './styles';\n\n\n\nfunction App() {\n  const classes = useStyles();\n  const [recordatorios, setRecordatorios] = useState([]);\n  const [err, setErr] = useState('');\n\n  useEffect(()=>{\n   console.log(recordatorios,err) \n  },[recordatorios])\n  \n  return (\n  <ThemeProvider theme={Theme}> \n    <CssBaseline/>\n    <Bar setRecordatorios={setRecordatorios} setErr={setErr} />\n      <Box >\n\t{\n\trecordatorios.length !== 0?\n\t<Table recordatorios={recordatorios}/>\n\t:\n\t<Welcome/>\n\t}\n\t{err}\n      </Box>\n  </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}